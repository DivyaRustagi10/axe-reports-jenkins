pipeline {
    agent any

    environment {
        AXE_REPORTER_API_KEY = credentials('AXE_REPORTER_API_KEY') // Assuming you have stored the API key in Jenkins credentials
    }

    tools {
        nodejs 'NodeJS'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    // Navigate to the correct directory and install project dependencies
                    dir('axe-reports-jenkins') {
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Navigate to the correct directory and run the tests
                    dir('axe-reports-jenkins') {
                        sh 'npm test'
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                // Wait for the a11y-results directory to be created
                dir('axe-reports-jenkins') {
                    sh '''
                    COUNTER=0
                    while [ ! -d "./a11y-results" ] && [ $COUNTER -lt 30 ]; do
                        echo "Waiting for a11y-results directory to be created..."
                        sleep 1
                        COUNTER=$((COUNTER+1))
                    done
                    if [ ! -d "./a11y-results" ]; then
                        echo "a11y-results directory not found after waiting"
                        exit 1
                    fi
                    '''
                }
                // List the contents of the a11y-results directory
                dir('axe-reports-jenkins') {
                    sh 'ls -la ./a11y-results || echo "No results found"'
                }
                // Archive the a11y results
                dir('axe-reports-jenkins') {
                    archiveArtifacts artifacts: 'a11y-results/**/*', allowEmptyArchive: true
                }
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}