pipeline {
    agent any

    environment {
        AXE_REPORTER_API_KEY = credentials('AXE_REPORTER_API_KEY') // Assuming you have stored the API key in Jenkins credentials
    }

    tools {
        nodejs 'NodeJS'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    dir('axe-reports-jenkins') {
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    dir('axe-reports-jenkins') {
                        sh 'npm test'
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                def reportsDashJsonPath = './a11y-results'
                def dimensions = 'ProductA,App,MainComponent'

                dir('axe-reports-jenkins') {
                    sh """
                    npm run axe -- bulk-reports ${reportsDashJsonPath} --axe-reports-api-key ${AXE_REPORTER_API_KEY} --send-axe-reports --axe-reports-dimensions=${dimensions}
                    echo "Uploaded Reports to Axe Reports Dashboard"
                    """
                }

                // Debugging: Check if the a11y-results directory is created
                dir('axe-reports-jenkins') {
                    sh '''
                    echo "Checking if a11y-results directory exists..."
                    if [ -d "./a11y-results" ]; then
                        echo "a11y-results directory exists"
                        ls -la ./a11y-results
                    else
                        echo "a11y-results directory does not exist"
                        echo "Current directory contents:"
                        ls -la
                    fi
                    '''
                }

                // Archive the a11y results
                dir('axe-reports-jenkins') {
                    archiveArtifacts artifacts: 'a11y-results/**/*', allowEmptyArchive: true
                }
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}