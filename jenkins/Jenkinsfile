pipeline {
    agent any

    environment {
        AXE_REPORTER_API_KEY = credentials('AXE_REPORTER_API_KEY') // Assuming you have stored the API key in Jenkins credentials
        PATH = "/usr/local/bin:$PATH" // Ensure Homebrew binaries are in the PATH
    }

    tools {
        nodejs 'NodeJS'
    }

    stages {
        stage('Install System Dependencies') {
            steps {
                sh '''
                brew install pkg-config cairo pango libpng jpeg giflib librsvg || true
                '''
            }
        }

        stage('Install Node Modules') {
            steps {
                script {
                    // Navigate to the correct directory and install project dependencies
                    dir('axe-reports-jenkins') {
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Navigate to the correct directory and run the tests
                    dir('axe-reports-jenkins') {
                        sh 'npm test'
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                // Debugging: Check if the a11y-results directory is created
                dir('axe-reports-jenkins') {
                    sh '''
                    echo "Checking if a11y-results directory exists..."
                    if [ -d "./a11y-results" ]; then
                        echo "a11y-results directory exists"
                        ls -la ./a11y-results
                    else
                        echo "a11y-results directory does not exist"
                        echo "Current directory contents:"
                        ls -la
                    fi
                    '''
                }
                // Archive the a11y results
                dir('axe-reports-jenkins') {
                    archiveArtifacts artifacts: 'a11y-results/**/*', allowEmptyArchive: true
                }
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}